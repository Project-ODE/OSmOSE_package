
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery_basic_use_cases/Dataset/4_dealwith_anomalies.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_basic_use_cases_Dataset_4_dealwith_anomalies.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_basic_use_cases_Dataset_4_dealwith_anomalies.py:


Dealing with data anomalies
=====================================

This code will show you how to deal with anomalies in raw data or their metadata, from corrupted files to differences in sample frequency.

.. GENERATED FROM PYTHON SOURCE LINES 11-28

Preambule : what is called an anomaly ?
--------------------------------------------
For OSmOSE, audio metadata refers to any audio information collected both from audio file header or from audio content after file reading at our dataset uploading. Audio metadata read from file header (ie `read_header(audio_file)`):

1. filename: check filenames for consistency, especially they have to contain a unique timestamp template
2. timestamp
3. extension : check that are only .wav files are present (.WAV files represent an anomaly)
4. format
5. duration
6. sample rate
7. dutycyle (timedelta between current timestamp and previous one)
8. volume
9. sampwidth
10. number of channels (stereo or mono)
11. subtype (eg PCM16, see rumengol)
Audio metadata extracted from audio content (ie after data = audio_f.read() )
12. min and max of sample amplitude

.. GENERATED FROM PYTHON SOURCE LINES 30-31

Basic scan

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: default


    # - this scan only look at audio metadata from headers (1 to 11)
    # - run within the jupyter hub session
    # - perform the tests 1-3 and 4








.. GENERATED FROM PYTHON SOURCE LINES 37-38

Heavy scan

.. GENERATED FROM PYTHON SOURCE LINES 38-43

.. code-block:: default


    # - it will load all audio files and collect all 
    # - run with pbs jobs
    # - perform all tests








.. GENERATED FROM PYTHON SOURCE LINES 44-45

Light anomaly tests

.. GENERATED FROM PYTHON SOURCE LINES 45-50

.. code-block:: default


    # 4. len(np.unique) > 1 sur duration (round to second) 
    # 5. len(np.unique) > 1 sur sample_rate 
    # 6. len(np.unique) > 1 sur inter_duration (round to second) 








.. GENERATED FROM PYTHON SOURCE LINES 51-52

Strong anomaly tests

.. GENERATED FROM PYTHON SOURCE LINES 52-58

.. code-block:: default


    # 7. at least one file header is corrupted (ie output status of method read_header)
    # 8. at least one wav file cannot be read (ie status of data = audio_f.read() )
    # 9. at least one audio file contains data out of the range -1:1 (based on info 12)
    # 10. at least one audio file extension is not supported (based on info 3)








.. GENERATED FROM PYTHON SOURCE LINES 59-60

Strong anomaly test failing, the following operations are done:

.. GENERATED FROM PYTHON SOURCE LINES 60-68

.. code-block:: default

    
    # - interrupt upload
    # - print the failing test(s) and the filename(s) concerned
    # - block the use of force_upload
    # - suggest to do a complete scan of the dataset
    # - orient the user to the notebook «visualize and understand my audio metadata»
    # - orient the user to the notebook «handle my badly shaped dataset »








.. GENERATED FROM PYTHON SOURCE LINES 69-70

Light anomaly test failing, the following operations are done:

.. GENERATED FROM PYTHON SOURCE LINES 70-78

.. code-block:: default


    # - print the failing test(s) and the filename(s) concerned
    # - suggest using force_upload
    # - orient the user to the notebook «visualize and understand my audio metadata»











.. GENERATED FROM PYTHON SOURCE LINES 79-81

Codes
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 81-87

.. code-block:: default


    # sphinx_gallery_thumbnail_path = '_static/thumbnail_anomalies.png'

    from pathlib import Path
    from OSmOSE import Dataset








.. GENERATED FROM PYTHON SOURCE LINES 88-89

Let's build the dataset following  :ref:`sphx_glr_gallery_basic_use_cases_Dataset_1_build_dataset.py`

.. GENERATED FROM PYTHON SOURCE LINES 89-99

.. code-block:: default


    path_osmose_dataset = "/home6/cazaudo/Bureau/osmose_sample_datasets/"
    dataset_name = "Cetiroise"
    campaign_name = ""

    gps_coordinates = (48.44,-5.05)
    depth = 20

    dataset = Dataset(dataset_path = Path(path_osmose_dataset, campaign_name, dataset_name), gps_coordinates = gps_coordinates, depth = depth)








.. GENERATED FROM PYTHON SOURCE LINES 100-101

When trying to build this dataset, it will not work directly.

.. GENERATED FROM PYTHON SOURCE LINES 101-103

.. code-block:: default

    dataset.build(date_template = "%Y_%m_%d_%H_%M_%S" )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Scanning audio files:   0%|          | 0/5 [00:00<?, ?it/s]    Scanning audio files: 100%|██████████| 5/5 [00:00<00:00, 320.34it/s]


     Your dataset failed 1 anomaly test of level 1 (over 1); see details below. 
      Anomalies of level 1 block dataset uploading, but anyone can force it by setting the variable `force_upload` to True. 
     You can inspect your metadata saved here /home6/cazaudo/Bureau/osmose_sample_datasets/Cetiroise/data/audio/original/file_metadata.csv using the notebook  /home/datawork-osmose/osmose-datarmor/notebooks/metadata_analyzer.ipynb. 

    Anomalies of level 0
    - Test 1 : PASSED
    - Test 2 : PASSED
    - Test 3 : PASSED
    ---------------------
    Anomalies of level 1
    - Test 1 : FAILED




.. GENERATED FROM PYTHON SOURCE LINES 104-105

The variable `force_upload` allows you to upload your dataset on the platform despite detected anomalies.

.. GENERATED FROM PYTHON SOURCE LINES 105-110

.. code-block:: default

    force_upload = True

    dataset.build(date_template = "%Y_%m_%d_%H_%M_%S" , force_upload = force_upload)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Scanning audio files:   0%|          | 0/5 [00:00<?, ?it/s]    Scanning audio files: 100%|██████████| 5/5 [00:00<00:00, 399.84it/s]

     DONE ! your dataset is on OSmOSE platform !





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.858 seconds)


.. _sphx_glr_download_gallery_basic_use_cases_Dataset_4_dealwith_anomalies.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 4_dealwith_anomalies.py <4_dealwith_anomalies.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 4_dealwith_anomalies.ipynb <4_dealwith_anomalies.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
