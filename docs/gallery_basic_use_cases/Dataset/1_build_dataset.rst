
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery_basic_use_cases/Dataset/1_build_dataset.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_basic_use_cases_Dataset_1_build_dataset.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_basic_use_cases_Dataset_1_build_dataset.py:


First time building a OSmOSE dataset
=====================================

This code will show you how to format your raw audio data into a OSmOSE dataset, in the case of a fixed hydrophone.

.. GENERATED FROM PYTHON SOURCE LINES 11-14

Preambule
------------------------
In our dataset, only three metadata are mandatory for the moment: the timestamp of each audio file, and the gps location and depth of the hydrophone. In this tutorial we will how they can be set in the case of a fixed hydrophone ; for a mobile hydrophone you should pursue with the tutorial :ref:`sphx_glr_gallery_basic_use_cases_Dataset_2_mobile_hydrophone.py`.

.. GENERATED FROM PYTHON SOURCE LINES 17-24

How should I prepare my raw data ? 
-------------------------------------
Before you can build your dataset: 

- choose a dataset name (should not contain any special character, including '-'⁾ ; 
- create the folder ``{local_working_dir}/dataset/{dataset_name}``, or ``{local_working_dir}/dataset/{campaign_name}/{dataset_name}`` in case your dataset is part of a recording campaign; 
- place in this folder your audio data, they can be individual files or contain within multiple sub-folders ; 

.. GENERATED FROM PYTHON SOURCE LINES 26-32

How my timestamps are set ? 
--------------------------------------
The two following solutions are possible depending on whether timestamps are contained in the audio filenames:

- if this is the case, you just have to pass us the "timestamp signature" through the variable ``date_template`` (eg "%Y%m%d_%H%M%S")
- if not, you have to create the timestamp.csv file yourself following this `template <example_timestamp.csv>`__ ; in this file your timestamps can follow any signature as long as it is provided in the ``date_template`` variable. See :ref:`sphx_glr_gallery_basic_use_cases_Dataset_2_mobile_hydrophone.py` for a code example on another dataset.

.. GENERATED FROM PYTHON SOURCE LINES 35-37

Codes
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 37-44

.. code-block:: default


    # sphinx_gallery_thumbnail_path = '_static/dataset_metadata.png'


    from pathlib import Path
    from OSmOSE import Dataset








.. GENERATED FROM PYTHON SOURCE LINES 45-46

You first have to set the `path_osmose_dataset`, which is where your dataset named `dataset_name` should be ; unless it is part of a recording campaign named `campaign_name`, your dataset should then be placed in `{path_osmose_dataset}/{campaign_name}/{dataset_name}`.

.. GENERATED FROM PYTHON SOURCE LINES 46-50

.. code-block:: default

    path_osmose_dataset = "/home6/cazaudo/Bureau/osmose_sample_datasets/"
    dataset_name = "SPM"
    campaign_name = "" # default value ; so no need to define it if your dataset is not part of a campaign








.. GENERATED FROM PYTHON SOURCE LINES 51-52

In our dataset, we have made mandatory the setting of two metadata variables, namely `gps_coordinates` (tuple of (latitude , longitude) coordinates in decimal degree) and `depth` (positive integer in meter) of the hydrophone. 

.. GENERATED FROM PYTHON SOURCE LINES 52-55

.. code-block:: default

    gps_coordinates = (46.89,-56.54)
    depth = 20








.. GENERATED FROM PYTHON SOURCE LINES 56-57

Before building your dataset, let's review two optional parameters. If the timezone of your data happens to be different from the different value UTC+00:00, use the input argument `timezone` of :class:`OSmOSE.Dataset.Dataset` to make your timestamps timezone-aware, following the str format `"+02:00"` for UTC+02:00 for example.

.. GENERATED FROM PYTHON SOURCE LINES 57-59

.. code-block:: default

    timezone = "-03:00" 








.. GENERATED FROM PYTHON SOURCE LINES 60-61

The variable `date_template` should be used to help us extracting the timestamp from your audio filenames. The default template is "%Y%m%d_%H%M%S", if you have a different one set its value in `date_template` with the same strftime format.

.. GENERATED FROM PYTHON SOURCE LINES 61-63

.. code-block:: default

    date_template = "%Y_%m_%dT%H:%M:%S"








.. GENERATED FROM PYTHON SOURCE LINES 64-65

Run the method :meth:`OSmOSE.Dataset.Dataset.build` of the class :class:`OSmOSE.Dataset.Dataset`, and that's it your dataset is now OSmOSE compatible !

.. GENERATED FROM PYTHON SOURCE LINES 65-73

.. code-block:: default

    dataset = Dataset(dataset_path = Path(path_osmose_dataset, campaign_name, dataset_name), gps_coordinates = gps_coordinates, depth = depth, timezone = timezone)
    dataset.build(date_template = date_template)










.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Scanning audio files:   0%|          | 0/5 [00:00<?, ?it/s]    Scanning audio files: 100%|██████████| 5/5 [00:00<00:00, 350.50it/s]

     DONE ! your dataset is on OSmOSE platform !





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.675 seconds)


.. _sphx_glr_download_gallery_basic_use_cases_Dataset_1_build_dataset.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 1_build_dataset.py <1_build_dataset.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 1_build_dataset.ipynb <1_build_dataset.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
