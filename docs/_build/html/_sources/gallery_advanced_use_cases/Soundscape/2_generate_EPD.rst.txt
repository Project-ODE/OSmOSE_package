
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery_advanced_use_cases/Soundscape/2_generate_EPD.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_advanced_use_cases_Soundscape_2_generate_EPD.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_advanced_use_cases_Soundscape_2_generate_EPD.py:


EPD (Empirical Plot Distribution)
============================================================

This code will show you how to compute EPD from audio file-level welch spectra

.. GENERATED FROM PYTHON SOURCE LINES 12-15

Prerequisites
===============
You first need to compute audio file-level spectrograms before computing LTAS ; see the use case :ref:`sphx_glr_gallery_basic_use_cases_Spectrogram_2_tune_parameters.py` to do this.

.. GENERATED FROM PYTHON SOURCE LINES 17-19

Codes
===============

.. GENERATED FROM PYTHON SOURCE LINES 19-31

.. code-block:: default



    from pathlib import Path
    from OSmOSE import Spectrogram
    import glob

    path_osmose_dataset = "/home6/cazaudo/Bureau/osmose_sample_datasets/"
    dataset_name = "SPM"
    campaign_name = ""

    spectrogram = Spectrogram(dataset_path = Path(path_osmose_dataset, campaign_name, dataset_name))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    No valid processed/adjust_metadata.csv found and no parameters provided. All attributes will be initialized to default values..  





.. GENERATED FROM PYTHON SOURCE LINES 32-41

Parameters of LTAS 
----------------------------
Generate sequential LTAS : Sequential means that your welch spectra are processed over successive time period of fixed duration defined by the variable `time_scale` in the cell below (eg, this period can be set to one week, such that one soundscape figure will be generated for each successive week). `time_scale` can be set to the following values:

- H for hours
- D for days 
- M for months
- Y for years
- set `time_scale='all'` to generate a LTAS over your entire dataset.

.. GENERATED FROM PYTHON SOURCE LINES 43-45

`time_resolution` and `sample_rate` allow us to identify your welch folder which sould be located in `processed/welch/` with a folder name following `{time_resolution}_{sample_rate}`.
`Freq_min` (in Hz, default value 0)  and `Freq_max` (in Hz, default value fs/2) are respectively minimum and maximum frequencies to pass-band filter welch spectra (only available for SPL)

.. GENERATED FROM PYTHON SOURCE LINES 45-51

.. code-block:: default


    dataset_sr = 4000
    time_res = 60

    spectrogram.build_EPD(time_res, dataset_sr,show_fig=True)




.. image-sg:: /gallery_advanced_use_cases/Soundscape/images/sphx_glr_2_generate_EPD_001.png
   :alt: 2 generate EPD
   :srcset: /gallery_advanced_use_cases/Soundscape/images/sphx_glr_2_generate_EPD_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home6/cazaudo/Bureau/osmose_V0/advanced_use_cases/Soundscape/2_generate_EPD.py:49: DeprecationWarning: the `interpolation=` argument to nanpercentile was renamed to `method=`, which has additional options.
    Users of the modes 'nearest', 'lower', 'higher', or 'midpoint' are encouraged to review the method they used. (Deprecated NumPy 1.22)
      spectrogram.build_EPD(time_res, dataset_sr,show_fig=True)
    saving /home6/cazaudo/Bureau/osmose_sample_datasets/SPM/processed/EPD/EPD.png ; Nber of welch: 227





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.911 seconds)


.. _sphx_glr_download_gallery_advanced_use_cases_Soundscape_2_generate_EPD.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 2_generate_EPD.py <2_generate_EPD.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 2_generate_EPD.ipynb <2_generate_EPD.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
